package drools.user;

import com.sample.drools.pojo.Order;
import com.sample.drools.pojo.Customer;

rule "customer1"
    when
        $order: Order();
        $customer: Customer(orderList contains $order);
    then
        System.err.println("customer1: orderList contains $order");
end

rule "customer2"
    when
        $order: Order();
        $customer: Customer(orderList not contains $order);
    then
        System.err.println("customer2: orderList not contains $order");
end

rule "customer3"
    when
        $customer: Customer(name matches "张.*");
    then
        System.err.println("customer3: name matches \"张.*\"");
end

rule "customer4"
    when
        $customer: Customer(name not matches "张.*");
    then
        System.err.println("customer4: name not matches \"张.*\"");
end

// other when syntax:
// - memberOf
// - not memberOf

rule "customer5"
    when
        eval(true);
    then
        Customer customerRule = new Customer();
        customerRule.setName("张三");
        insert(customerRule);
        System.err.println("customer5: insert customer \"张三\"");
end

rule "customer6"
    no-loop true
    when
        $customer: Customer(name == "李四");
    then
        $customer.setName("张三");
        update($customer)
        System.err.println("customer6: update customer \"李四\"");
end

rule "customer7"
    salience 1
    when
        $customer: Customer(name == "李四");
    then
        retract($customer)
        System.err.println("customer7: remove customer \"李四\"");
end

// props syntax:
// - salience (default 0)
// - no-loop
// - date-effective
// - date-expires
// - enabled
// - dialect
// - activation-group
// - agenda-group
// - auto-facus
// - timer
